---
title: History
section: rest
index: 50
jump_to:
  Help with:
    - History#title
  API reference:
    - Application history#history
    - Channel history#channel-history
---

The REST client library provides message history at either an application level or channel level.


h1. API reference

inline-toc.
  Application history:
    - Methods:
      - History
  Channel object history:
    - Methods:
      - History#channel-history

h2(#history). Application history

With the REST client library, the REST object must be created in order to retrieve history the required application:

bc[javascript]. var Rest = new Ably.Rest(options);

bc[ruby]. rest = Ably::Rest.new(options)

h3. Methods

h6. history

bq. Rest.history(options, callback)

This call queries the REST "@/apps/<app id>/history@":/rest/spec#history API

h4. Parameters

- options := is an optional object containing the query parameters, as specified in the "REST API":/rest/spec#history documentation.
- callback := is a function of the form: @callback(err, result)@
where:
<ul>
<li>@err@ contains an error value on the case of an error response as defined in the "REST API":/rest/spec#common documentation</li>
<li>On success, @result@ contains an array of results whose type corresponds to the result type for the request granularity as specified in "REST API":/rest/spec#history</li>
</ul>


h2(#channel-history). Channel object history

With the REST client library, the Channel object must be created in order to retrieve history or stats for the required channel:

bc[javascript]. var Rest = new Ably.Rest(options),
    channel = Rest.channels.get('channel0');

bc[ruby]. rest = Ably::Rest.new(options)
channel = rest.channels.get('channel0')

h3. Methods

h6. history

bq. channel.history(options, callback)

This call queries the REST "@/apps/<app id>/channels/<channel id>/history@":/rest/spec#channel-history API

h4. Parameters

- options := is an optional object containing the query parameters, as specified in the "REST API":/rest/spec#channel-history documentation.
- callback := is a function of the form: @callback(err, result)@
where:
<ul>
<li>@err@ contains an error value on the case of an error response as defined in the "REST API":/rest/spec#common documentation</li>
<li>On success, @result@ contains an array of results whose type corresponds to the result type for the request granularity as specified in "REST API":/rest/spec#channel-history</li>
</ul>