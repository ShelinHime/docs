---
title: Channels & Messages
section: rest
index: 20
---

In the REST client library, a @Channel@ object must be obtained in order to make calls to the channel-specific routes in the REST API:

bc[nodejs]. var Rest = new Ably.Rest(options),
    channel = Rest.channels.get('channel0');

bc[ruby]. rest = Ably::Rest.new(options)
channel = rest.channels.get('channel0')

bc[java]. Rest rest = new Ably.Rest(options);
Channel channel = rest.channels.get('channel0');

A shortcut method is also provided to retrieve a @Channel@:

bc[nodejs]. var channel = Rest.channel('channel0');

bc[ruby]. channel = Rest.channel('channel0')

bc[java]. Channel channel = Rest.channel("channel0");

The channel-specific calls in the client library directly mirror the "REST API":/rest-api.

h1. Channel Object Reference

h2. Methods

h6. publish

bq. <span lang="nodejs">channel.publish(event, data, callback)</span><span
          lang="ruby">channel.publish(event, data) → success</span><span
          lang="java">channel.publish(String event, Object data) → Boolean success</span>

This call queries the REST "@/apps/<app id>/channels/<channel id>/publish@":/rest-api/#publish API.

h4. Parameters

- event := the name of the event to publish
- data := the message payload
- <div lang="nodejs">callback</div> := is a function of the form: @callback(err, result)@
where:
<ul>
<li>@err@ contains an error value on the case of an error response as defined in the "REST API":/rest-api/#common documentation</li>
<li>On success, @result@ contains the object returned in the response body, which may be empty.</li>
</ul>

<div lang="ruby,java">
h4. Returns

Returns @true@ if successful.  Failure to publish will raise an exception - typical publishing exceptions include:

  <div lang="ruby">

* @Ably::NetworkUnavailableException@
* @Ably::QuotaExceededException@
* @Ably::AuthenticationFailureException@
  </div>
  <div lang="java">

* @Ably.NetworkUnavailableException@
* @Ably.QuotaExceededException@
* @Ably.AuthenticationFailureException@
  </div>

</div>

h6. history

bq. <span lang="nodejs">channel.history(options, callback)</span><span
          lang="ruby">channel.history(options) → json_result</span><span
          lang="java">channel.history(OptionsHash options) → JSONResult</span>

This call queries the REST "@/apps/<app id>/channels/<channel id>/history@":/rest-api/#channel-history API.

h4. Parameters

- options := an optional object containing the query parameters, as specified in the "REST API":/rest-api/#channel-history.
- <div lang="nodejs">callback</div> := is a function of the form: @callback(err, result)@
where:
<ul>
<li>@err@ contains an error value on the case of an error response as defined in the "REST API":/rest-api/#common documentation</li>
<li>On success, @result@ contains an array of results whose type corresponds to the result type for the request granularity as specified in "REST API":/rest-api/#channel-history.
  Example @result@:
  <pre lang="json"><code>[{
    "name": "<event name>",
    "channel": "<channel id>",
    "data": "<message payload>",
    "timestamp": "<message timestamp>"
  }]</code></pre>
</li>
</ul>

<div lang="ruby,java">
h4. Returns

On success, <span lang="ruby">@json_result@</span><span lang="java">@JSONResult@</span> contains an array of results whose type corresponds to the result type for the request granularity as specified in "REST API":/rest-api/#channel-history.

Example <span lang="ruby">@json_result@</span><span lang="java">@JSONResult@</span>:

bc[json]. [{
  "name": "<event name>",
  "channel": "<channel id>",
  "data": "<message payload>",
  "timestamp": "<message timestamp>"
}]

Failure to retrieve the history will raise an exception - typical exceptions include:
  <div lang="ruby">

* @Ably::NetworkUnavailableException@
* @Ably::QuotaExceededException@
* @Ably::AuthenticationFailureException@
  </div>
  <div lang="java">

* @Ably.NetworkUnavailableException@
* @Ably.QuotaExceededException@
* @Ably.AuthenticationFailureException@
  </div>

</div>

h6. stats

bq. <span lang="nodejs">channel.stats(options, callback)</span><span
          lang="ruby">channel.stats(options) → json_result</span><span
          lang="java">channel.stats(OptionsHash options) → JSONResult</span>


This call queries the REST "@/apps/<app id>/channels/<channel id>/stats@":/rest-api/#channel-stats API.

h4. Parameters

- options := an optional object containing the query parameters, as specified in the "REST API":/rest-api/#channel-stats.
- <div lang="nodejs">callback</div> := is a function of the form: @callback(err, result)@
where:
<ul>
<li>@err@ contains an error value on the case of an error response as defined in the "REST API":/rest-api/#common documentation</li>
<li>On success, @result@ contains an array of results whose type corresponds to the result type for the request granularity as specified in "REST API":/rest-api/#channel-stats.
  Example @result@:
  <pre lang="json"><code>[{
    "an example": "<needs to be inserted here>",
    "illustrating": "<a simple stats result>"
  }]</code></pre>
</li>
</ul>

<div lang="ruby,java">
h4. Returns

On success, <span lang="ruby">@json_result@</span><span lang="java">@JSONResult@</span> contains an array of statistics for the request granularity as specified in "REST API":/rest-api/#channel-stats.

Example <span lang="ruby">@json_result@</span><span lang="java">@JSONResult@</span>:

bc[json]. [{
    "an example": "<needs to be inserted here>",
    "illustrating": "<a simple stats result>"
  }]

Failure to retrieve the stats will raise an exception - typical exceptions include:
  <div lang="ruby">

* @Ably::NetworkUnavailableException@
* @Ably::QuotaExceededException@
* @Ably::AuthenticationFailureException@
  </div>
  <div lang="java">

* @Ably.NetworkUnavailableException@
* @Ably.QuotaExceededException@
* @Ably.AuthenticationFailureException@
  </div>

</div>



h6. presence

bq. <span lang="nodejs">channel.presence(options, callback)</span><span
          lang="ruby">channel.presence(options) → json_result</span><span
          lang="java">channel.presence(OptionsHash options) → JSONResult</span>


This call queries the REST "@/apps/<app id>/channels/<channel id>/presence@":/rest-api/#channel-presence API.

h4. Parameters

- options := an optional object containing the query parameters, as specified in the "REST API":/rest-api/#channel-presence.
- <div lang="nodejs">callback</div> := is a function of the form: @callback(err, result)@
where:
<ul>
<li>@err@ contains an error value on the case of an error response as defined in the "REST API":/rest-api/#common documentation</li>
<li>On success, @result@ contains an array of results whose type corresponds to the result type for the request granularity as specified in "REST API":/rest-api/#channel-presence.
  Example @result@:
  <pre lang="json"><code>[{
    "an example": "<needs to be inserted here>",
    "illustrating": "<a simple presence result>"
  }]</code></pre>
</li>
</ul>

<div lang="ruby,java">
h4. Returns

On success, <span lang="ruby">@json_result@</span><span lang="java">@JSONResult@</span> contains an array representing each client present on the chnannel as specified in "REST API":/rest-api/#channel-presence.

Example <span lang="ruby">@json_result@</span><span lang="java">@JSONResult@</span>:

bc[json]. [{
    "an example": "<needs to be inserted here>",
    "illustrating": "<a simple presence result>"
  }]

Failure to retrieve the presence will raise an exception - typical exceptions include:
  <div lang="ruby">

* @Ably::NetworkUnavailableException@
* @Ably::QuotaExceededException@
* @Ably::AuthenticationFailureException@
  </div>
  <div lang="java">

* @Ably.NetworkUnavailableException@
* @Ably.QuotaExceededException@
* @Ably.AuthenticationFailureException@
  </div>

</div>